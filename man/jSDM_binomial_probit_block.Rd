% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jSDM_binomial_probit_block.R
\name{jSDM_binomial_probit_block}
\alias{jSDM_binomial_probit_block}
\title{Binomial probit regression}
\usage{
jSDM_binomial_probit_block(
  burnin = 5000,
  mcmc = 15000,
  thin = 10,
  presence_site_sp,
  site_suitability,
  site_data,
  n_latent = 0,
  site_effect = "none",
  lambda_start = 0,
  W_start = 0,
  beta_start = 0,
  alpha_start = 0,
  V_alpha_start = 1,
  shape = 0.5,
  rate = 5e-04,
  mu_beta = 0,
  V_beta = 1e+06,
  mu_lambda = 0,
  V_lambda = 10,
  seed = 1234,
  verbose = 1
)
}
\arguments{
\item{burnin}{The number of burnin iterations for the sampler.}

\item{mcmc}{The number of Gibbs iterations for the sampler. Total number of Gibbs iterations is equal to \code{burnin+mcmc}.\code{burnin+mcmc} must be divisible by 10 and superior or equal to 100 so that the progress bar can be displayed.}

\item{thin}{The thinning interval used in the simulation. The number of mcmc iterations must be divisible by this value.}

\item{presence_site_sp}{A matrix \eqn{n_{site} \times n_{species}}{n_site x n_species} indicating the presence by a 1 (or the absence by a 0) of each species on each site.}

\item{site_suitability}{A one-sided formula of the form '~x1+...+xp' with p terms specifying the explicative variables for the suitability process of the model.}

\item{site_data}{A data frame containing the model's explicative variables by site.}

\item{n_latent}{An integer which specifies the number of latent variables to generate. Defaults to \code{0}.}

\item{site_effect}{A string indicating whether row effects are included as random effects (\code{"random"}) or not included (\code{"none"}) in the model. 
If random effects, they are drawn from a normal distribution with mean zero and unknown variance, analogous to a random intercept in mixed models. Defaults to \code{"none"}.}

\item{lambda_start}{Starting values for lambda parameters corresponding to the latent variables for each species must be either a scalar or a \eqn{n_{latent} \times n_{species}}{n_latent x n_species} upper triangular matrix with strictly positive values on the diagonal, unused if \code{n_latent=0}.
If \code{lambda_start} takes a scalar value, then that value will serve for all of the \eqn{\lambda} parameters except those concerned by the constraints explained above.}

\item{W_start}{Starting values for latent variables must be either a scalar or a \eqn{nsite \times n_latent}{n_site x n_latent} matrix, unused if \code{n_latent=0}.
If \code{W_start} takes a scalar value, then that value will serve for all of the \eqn{W_{il}}{W_il} with \eqn{i=1,\ldots,n_{site}}{l=1,...,n_site} and \eqn{l=1,\ldots,n_{latent}}{l=1,...,n_latent}.}

\item{beta_start}{Starting values for beta parameters of the suitability process for each species must be either a scalar or a \eqn{p \times n_{species}}{p x n_species} matrix. If \code{beta_start} takes a scalar value, then that value will serve for all of the \eqn{\beta} parameters.}

\item{alpha_start}{Starting values for random site effect parameters must be either a scalar or a \eqn{n_{site}}{n_site}-length vector, unused if \code{site_effect="none"}.
If \code{alpha_start} takes a scalar value, then that value will serve for all of the \eqn{\alpha} parameters.}

\item{V_alpha_start}{Starting value for variance of random site effect must be a stricly positive scalar, unused if \code{site_effect="none"}.
# and if \code{site_effect="fixed"}}

\item{shape}{Shape parameter of the Inverse-Gamma prior for the random site effect variance \code{V_alpha}, unused if \code{site_effect="none"}. 
Must be a stricly positive scalar. Default to 0.5 for weak informative prior.
# and if \code{site_effect="fixed"}}

\item{rate}{Rate parameter of the Inverse-Gamma prior for the random site effect variance \code{V_alpha}, unused if \code{site_effect="none"}. 
# and if \code{site_effect="fixed"}
Must be a stricly positive scalar. Default to 0.0005 for weak informative prior.}

\item{mu_beta}{Means of the Normal priors for the \eqn{\beta}{\beta} parameters of the suitability process. \code{mu_beta} must be either a scalar or a \eqn{p}-length vector.
If \code{mu_beta} takes a scalar value, then that value will serve as the prior mean for all of the \eqn{\beta} parameters. The default value is set to 0 for an uninformative prior.}

\item{V_beta}{Variances of the Normal priors for the \eqn{\beta}{\beta} parameters of the suitability process. \code{V_beta} must be either a scalar or a \eqn{p \times p}{p x p} symmetric positive semi-definite square matrix.
 If \code{V_beta} takes a scalar value, then that value will serve as the prior variance for all of the \eqn{\beta} parameters, so the variance covariance matrix used in this case is diagonal with the specified value on the diagonal. 
The default variance is large and set to \code{1e+06} for an uninformative flat prior.}

\item{mu_lambda}{Means of the Normal priors for the \eqn{\lambda}{\lambda} parameters corresponding to the latent variables. 
\code{mu_lambda} must be either a scalar or a \eqn{n_{latent}}{n_latent}-length vector. 
If \code{mu_lambda} takes a scalar value, then that value will serve as the prior mean for all of the \eqn{\lambda}{\lambda} parameters. The default value is set to 0 for an uninformative prior.}

\item{V_lambda}{Variances of the Normal priors for the \eqn{\lambda}{\lambda} parameters corresponding to the latent variables. \code{V_lambda} must be either a scalar or a \eqn{n_{latent} \times n_{latent}}{n_latent x n_latent} symmetric positive semi-definite square matrix.
If \code{V_lambda} takes a scalar value, then that value will serve as the prior variance for all of \eqn{\lambda}{\lambda} parameters, so the variance covariance matrix used in this case is diagonal with the specified value on the diagonal.
The default variance is large and set to 10 for an uninformative flat prior.}

\item{seed}{The seed for the random number generator. Default to 1234.}

\item{verbose}{A switch (0,1) which determines whether or not the progress of the sampler is printed to the screen. Default is 1: a progress bar is printed, indicating the step (in \%) reached by the Gibbs sampler.}
}
\value{
An object of class \code{"jSDM"} acting like a list including : \tabular{ll}{
mcmc.alpha \tab An mcmc object that contains the posterior samples for for site effects \eqn{\alpha_i}, not returned if \code{site_effect="none"}.\cr
mcmc.V_alpha \tab An mcmc object that contains the posterior samples for variance of random site effect, not returned if \code{site_effect="none"}.\cr
mcmc.latent \tab A list by latent variable of mcmc objects that contains the posterior samples for latent variables  \eqn{W_l} with \eqn{l=1,\ldots,n_{latent}}{l=1,...,n_latent}, not returned if \code{n_latent=0}.\cr
mcmc.sp \tab A list by species of mcmc objects that contains the posterior samples for species effects \eqn{\beta_j} and \eqn{\lambda_j} if \code{n_latent>0}.\cr
mcmc.Deviance \tab The posterior sample of the deviance \eqn{D}{D}, with \eqn{D=-2\log(\prod_{ij} P(y_{ij}|\beta_j,\lambda_j, \alpha_i, W_i))}{D=-2log(\prod_ij P(y_ij|\beta_j,\lambda_j, \alpha_i, W_i))}, is also provided.\cr 
Z_latent \tab Predictive posterior mean of the latent variable Z. \cr
probit_theta_pred \tab Predictive posterior mean of the probability to each species to be present on each site, transformed by probit link function.\cr
model_spec \tab Various attributes of the model fitted, including the response and model matrix used, distributional assumptions as link function, family and number of latent variables, hyperparameters used in the Bayesian estimation and mcmc, burnin and thin.\cr}
The \code{mcmc.} objects can be summarized by functions provided by the \code{coda} package.
}
\description{
The \code{jSDM_binomial_probit_block} function performs a Binomial probit regression in a Bayesian framework. The function calls a Gibbs sampler written in C++ code which uses conjugate priors to estimate the conditional posterior distribution of model's parameters.
}
\details{
We model an ecological process where the presence or absence of species \eqn{j} on site \eqn{i} is explained by habitat suitability.
\bold{Ecological process:}
\deqn{y_{ij} \sim \mathcal{B}inomial(\theta_{ij},t_i)}{y_ij ~ Binomial(\theta_ij,t_i),}
where \tabular{ll}{
 if \code{n_latent=0} and \code{site_effect="none"} \tab \eqn{\text{probit}(\theta_{ij}) = \beta_{0j} + X_i \beta_j}{probit(\theta_ij) = \beta_0j + X_i \beta_j} \cr
 if \code{n_latent>0} and \code{site_effect="none"} \tab \eqn{\text{probit}(\theta_{ij}) = \beta_{0j} + X_i \beta_j + W_i \lambda_j}{probit(\theta_ij) = \beta_0j + X_i \beta_j +  W_i \lambda_j} \cr
 if \code{n_latent=0} and \code{site_effect="random"} \tab \eqn{\text{probit}(\theta_{ij}) = \beta_{0j} + X_i \beta_j  + \alpha_i \text{ and } \alpha_i \sim \mathcal{N}(0,V_\alpha)}{probit(\theta_ij) = \beta_0j + X_i \beta_j + \alpha_i and \alpha_i ~ N(0,V_\alpha)} \cr
 if \code{n_latent>0} and \code{site_effect="random"} \tab \eqn{\text{probit}(\theta_{ij}) = \beta_{0j} + X_i \beta_j + W_i \lambda_j + \alpha_i \text{ and } \alpha_i \sim \mathcal{N}(0,V_\alpha)}{probit(\theta_ij) = \beta_0j + X_i  \beta_j +  W_i \lambda_j + \alpha_i and \alpha_i ~ N(0,V_\alpha)} \cr
}
}
\examples{
#==============================================
# jSDM_binomial_probit_block()
# Example with simulated data
#==============================================

#=================
#== Load libraries
library(jSDM)

#==================
#== Data simulation

#= Number of sites
nsite <- 50

#= Set seed for repeatability
seed <- 1234
set.seed(seed)

#= Number of species
nsp<- 5

#= Number of latent variables
n_latent <- 2

#= Ecological process (suitability)
x1 <- rnorm(nsite,0,1)
x2 <- rnorm(nsite,0,1)
X <- data.frame(Int=rep(1,nsite),x1=x1,x2=x2)
W <- cbind(rnorm(nsite,0,1),rnorm(nsite,0,1))
data <- cbind (X,W)
beta.target <- t(matrix(runif(nsp*ncol(X),-2,2),
                byrow=TRUE, nrow=nsp))
l.zero <- 0
l.diag <- runif(2,0,2)
l.other <- runif(nsp*n_latent-3,-2,2)
lambda.target <- t(matrix(c(l.diag[1],l.zero,
l.other[1],l.diag[2],l.other[-1]), byrow=TRUE, nrow=nsp))
param.target <- rbind(beta.target,lambda.target)
V_alpha.target <- 0.5
V <- 1
alpha.target <- rnorm(nsite,0,sqrt(V_alpha.target))
probit_theta <- as.matrix(X) \%*\% beta.target 
+ W \%*\% lambda.target + alpha.target
e <- matrix(rnorm(nsp*nsite,0,sqrt(V)),nsite,nsp)
Z_true <- probit_theta + e
Y <- matrix (NA, nsite,nsp)
for (i in 1:nsite){
 for (j in 1:nsp){
   if ( Z_true[i,j] > 0) {Y[i,j] <- 1}
   else {Y[i,j] <- 0}
 }
}

#==================================
#== Site-occupancy model

# Increase number of iterations (burnin and mcmc) to get convergence 
mod<-jSDM_binomial_probit_block(# Iteration 
                                burnin=100,
                                mcmc=100,
                                thin=1,
                                # Response variable
                                presence_site_sp=Y,
                                # Explanatory variables
                                site_suitability=~x1+x2,
                                site_data = X,
                                n_latent=2,
                                site_effect="random",
                                # Starting values
                                alpha_start=0,
                                beta_start=0,
                                lambda_start=0,
                                W_start=0,
                                V_alpha_start=1,
                                # Priors
                                shape=0.5, rate=0.0005,
                                mu_beta=0, V_beta=1.0E6,
                                mu_lambda=0, V_lambda=10,
                                seed=1234, verbose=1)
# ===================================================
# Result analysis
# ===================================================

#==========
#== Outputs

#= Parameter estimates

## alpha
# summary(mod$mcmc.alpha)
pdf(file=file.path(tempdir(), "Posteriors_alpha_jSDM_probit_block.pdf"))
plot(alpha.target, summary(mod$mcmc.alpha)[[1]][,"Mean"],
     xlab ="alphas target", ylab ="alphas estimated")
abline(a=0,b=1,col='red')
dev.off()

## Valpha
# summary(mod$mcmc.V_alpha)
pdf(file=file.path(tempdir(), "Posteriors_Valpha_jSDM_probit_block.pdf"))
par(mfrow=c(1,2))
coda::traceplot(mod$mcmc.V_alpha)
coda::densplot(mod$mcmc.V_alpha)
abline(v=V_alpha.target,col='red')
dev.off()

## beta_j
# summary(mod$mcmc.sp$sp_1[,1:ncol(X)])
pdf(file=file.path(tempdir(), "Posteriors_beta_jSDM_probit_block.pdf"))
par(mfrow=c(ncol(X),2))
for (j in 1:nsp) {
  for (p in 1:ncol(X)) {
    coda::traceplot(coda::as.mcmc(
    mod$mcmc.sp[[paste0("sp_",j)]][,p]))
    coda::densplot(coda::as.mcmc(
    mod$mcmc.sp[[paste0("sp_",j)]][,p]), 
    main = paste(colnames(
    mod$mcmc.sp[[paste0("sp_",j)]])[p],
    ", species : ",j))
    abline(v=beta.target[p,j],col='red')
  }
}
dev.off()

## lambda_j
# summary(mod$mcmc.sp$sp_1[,(ncol(X)+1):(ncol(X)+n_latent)])
# summary(mod$mcmc.sp$sp_2[,(ncol(X)+1):(ncol(X)+n_latent)])
pdf(file=file.path(tempdir(), "Posteriors_lambda_jSDM_probit_block.pdf"))
par(mfrow=c(n_latent*2,2))
for (j in 1:nsp) {
  for (l in 1:n_latent) {
  coda::traceplot(coda::as.mcmc(mod$mcmc.sp
                                [[paste0("sp_",j)]][,ncol(X)+l]))
  coda::densplot(coda::as.mcmc(mod$mcmc.sp
                              [[paste0("sp_",j)]][,ncol(X)+l]), 
                 main=paste(colnames(mod$mcmc.sp[[paste0("sp_",j)]])
                 [ncol(X)+l],", species : ",j))
 abline(v=lambda.target[l,j],col='red')
  }
}
dev.off()

## W latent variables
pdf(file=file.path(tempdir(), "Posteriors_lv_jSDM_probit_block.pdf"))
par(mfrow=c(1,2))
for (l in 1:n_latent) {
plot(W[,l],
summary(mod$mcmc.latent[[paste0("lv_",l)]])[[1]][,"Mean"],
main = paste0("Latent variable W_", l),
xlab ="obs", ylab ="fitted")
abline(a=0,b=1,col='red')
}
dev.off()

## Deviance
summary(mod$mcmc.Deviance)
plot(mod$mcmc.Deviance)

#= Predictions

pdf(file=file.path(tempdir(), "Pred-Init.pdf"))
## probit_theta
# summary(mod$probit_theta_pred)
par(mfrow=c(1,1))
plot(probit_theta,mod$probit_theta_pred)
abline(a=0,b=1,col='red')

## Z
# summary(mod$Z_latent)
plot(Z_true,mod$Z_latent)
abline(a=0,b=1,col='red')
dev.off()
}
\references{
\tabular{l}{
Chib, S. and Greenberg, E. (1998) Analysis of multivariate probit models. \emph{Biometrika}, 85, 347-361. \cr
Warton, D. I.; Blanchet, F. G.; O'Hara, R. B.; O'Hara, R. B.; Ovaskainen, O.; Taskinen, S.; Walker, S. C. and Hui, F. K. C. (2015) So Many Variables: Joint Modeling in Community Ecology. \emph{Trends in Ecology & Evolution}, 30, 766-779.\cr}
}
\seealso{
\code{\link[coda]{plot.mcmc}}, \code{\link[coda]{summary.mcmc}}
}
\author{
\tabular{l}{
Ghislain Vieilledent <ghislain.vieilledent@cirad.fr> \cr
Jeanne Clément <jeanne.clement16@laposte.net> \cr }
}
\keyword{Bayesian}
\keyword{Binomial}
\keyword{Carlo}
\keyword{Chains}
\keyword{Gibbs}
\keyword{JSDM}
\keyword{MCMC}
\keyword{Markov}
\keyword{Monte}
\keyword{Sampling}
\keyword{biodiversity}
\keyword{hierarchical}
\keyword{models}
\keyword{probit}
\keyword{regression}
